<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.criown.mapper.StaffMapper">

    <resultMap id="BaseResultMap" type="com.criown.entity.Staff">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="sex" column="sex" jdbcType="VARCHAR"/>
            <result property="local" column="local" jdbcType="VARCHAR"/>
            <result property="number" column="number" jdbcType="INTEGER"/>
            <result property="career" column="career" jdbcType="VARCHAR"/>
            <result property="detail" column="detail" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,sex,
        local,number,career,detail
    </sql>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from staff
    </select>

    <select id="getAllByQuery" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from staff
        <where>
            <if test="name != null and name != ''">
                AND name like concat('%', #{name}, '%')
            </if>
            <if test="sex != null and sex != ''">
                AND sex like concat('%', #{sex}, '%')
            </if>
            <if test="local != null and local != ''">
                AND local like concat('%', #{local}, '%')
            </if>
            <if test="career != null and career != ''">
                AND career like concat('%', #{career}, '%')
            </if>
        </where>

    </select>

    <insert id="addAll">
        insert into staff
        ( name, sex,
         local, number, career,
         detail)
        values ( #{name}, #{sex},
                #{local}, #{number}, #{career},
                #{detail} )

    </insert>


    <delete id="delById" parameterType="java.util.List" >
        delete
        from staff
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")" index="">
            #{item}
        </foreach>
    </delete>

    <delete id="delByIdSingle">
        delete
        from staff
        where id = #{id,jdbcType=NUMERIC}
    </delete>
    <update id="updateAddById">
        update staff
        set
            number = #{number,jdbcType=NUMERIC},
            career = #{career,jdbcType=VARCHAR},
            detail = #{detail,jdbcType=VARCHAR},
            local  = #{local,jdbcType=VARCHAR},
            name   = #{name,jdbcType=VARCHAR},
            sex    = #{sex,jdbcType=VARCHAR}
        where id = #{oldId,jdbcType=NUMERIC}
    </update>

    <update id="updateNameAndSexAndLocalAndNumberAndCareerAndDetailById">
        update staff
        set name   = #{name,jdbcType=VARCHAR},
            sex    = #{sex,jdbcType=VARCHAR},
            local  = #{local,jdbcType=VARCHAR},
            number = #{number,jdbcType=NUMERIC},
            career = #{career,jdbcType=VARCHAR},
            detail = #{detail,jdbcType=VARCHAR}
        where id = #{id,jdbcType=NUMERIC}
    </update>
    <update id="updateNameAndSexAndLocalAndNumberAndDetailById">
        update staff
        set name   = #{name,jdbcType=VARCHAR},
            sex    = #{sex,jdbcType=VARCHAR},
            local  = #{local,jdbcType=VARCHAR},
            number = #{number,jdbcType=NUMERIC},
            detail = #{detail,jdbcType=VARCHAR}
        where id = #{id,jdbcType=NUMERIC}
    </update>


</mapper>
